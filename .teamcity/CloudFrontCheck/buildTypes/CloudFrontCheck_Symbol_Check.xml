<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>â–º Build 2</name>
  <description />
  <settings>
    <options>
      <option name="publishArtifactCondition" value="SUCCESSFUL" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_1" />
      <setting-ref ref="RUNNER_2" />
      <setting-ref ref="RUNNER_3" />
      <setting-ref ref="RUNNER_4" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_1" name="" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[mkdir %system.teamcity.build.tempDir%/artifacts
touch %system.teamcity.build.tempDir%/artifacts/artifact1.json
echo "##teamcity[publishArtifacts '%system.teamcity.build.tempDir%/artifacts/artifact1.json']"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[mkfile -n 20m %system.teamcity.build.tempDir%/big_file
mkfile -n 5k test+test.txt
mkdir lots
cd lots
touch file{001..002}]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="" type="simpleRunner">
        <parameters>
          <param name="script.content" value="echo &quot;##teamcity[remoteArtifact amiId='ami-05412f54c12b57971' type='awsImageBuilder' region='eu-west-2']&quot;" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="docker test" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="registry.jetbrains.team/p/tc/docker/alpine-node:latest" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerfile.content"><![CDATA[# syntax=docker/dockerfile:1
FROM node:12-alpine
RUN apk add --no-cache python2 g++ make
WORKDIR /app
COPY . .
RUN yarn install --production
CMD ["node", "src/index.js"]
EXPOSE 3000]]></param>
          <param name="dockerfile.source" value="CONTENT" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="docker push test" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="registry.jetbrains.team/p/tc/docker/alpine-node:latest" />
          <param name="docker.push.remove.image" value="" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="SshGitGitJetbrainsTeamTeamcityTestProjectTestProjectGit" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="DockerSupport">
        <parameters>
          <param name="cleanupPushed" value="true" />
          <param name="login2registry" value="PROJECT_EXT_4" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

